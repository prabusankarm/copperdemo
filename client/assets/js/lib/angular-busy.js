angular.module("cgBusy",[]),angular.module("cgBusy").factory("_cgBusyTrackerFactory",["$timeout","$q",function(i,n){return function(){var s={promises:[],delayPromise:null,durationPromise:null,delayJustFinished:!1,reset:function(e){s.minDuration=e.minDuration,s.promises=[],angular.forEach(e.promises,function(e){e&&!e.$cgBusyFulfilled&&r(e)}),0!==s.promises.length&&(s.delayJustFinished=!1,e.delay&&(s.delayPromise=i(function(){s.delayPromise=null,s.delayJustFinished=!0},parseInt(e.delay,10))),e.minDuration&&(s.durationPromise=i(function(){s.durationPromise=null},parseInt(e.minDuration,10)+(e.delay?parseInt(e.delay,10):0))))},isPromise:function(e){return void 0!==(e&&(e.then||e.$then||e.$promise&&e.$promise.then))},callThen:function(e,s,r){var i;e.then||e.$then?i=e:e.$promise?i=e.$promise:e.denodeify&&(i=n.when(e)),(i.then||i.$then).call(i,s,r)}},r=function(e){if(!s.isPromise(e))throw new Error("cgBusy expects a promise (or something that has a .promise or .$promise");-1===s.promises.indexOf(e)&&(s.promises.push(e),s.callThen(e,function(){e.$cgBusyFulfilled=!0,-1!==s.promises.indexOf(e)&&s.promises.splice(s.promises.indexOf(e),1)},function(){e.$cgBusyFulfilled=!0,-1!==s.promises.indexOf(e)&&s.promises.splice(s.promises.indexOf(e),1)}))};return s.active=function(){return!s.delayPromise&&(s.delayJustFinished?(s.delayJustFinished=!1,0===s.promises.length&&(s.durationPromise=null),0<s.promises.length):!!s.durationPromise||0<s.promises.length)},s}}]),angular.module("cgBusy").value("cgBusyDefaults",{}),angular.module("cgBusy").directive("cgBusy",["$compile","$templateCache","cgBusyDefaults","$http","_cgBusyTrackerFactory",function(p,d,g,y,h){return{restrict:"A",link:function(e,i,s,r){var n,a,o,t,l,u=i.css("position");"static"!==u&&""!==u&&void 0!==u||i.css("position","relative");var c=h(),m={templateUrl:"angular-busy.html",delay:0,minDuration:0,backdrop:!0,message:"Please Wait...",wrapperClass:"cg-busy cg-busy-animation"};angular.extend(m,g),e.$watchCollection(s.cgBusy,function(r){if(r||(r={promise:null}),angular.isString(r))throw new Error("Invalid value for cg-busy. cgBusy no longer accepts string ids to represent promises/trackers.");(angular.isArray(r)||c.isPromise(r))&&(r={promise:r}),(r=angular.extend(angular.copy(m),r)).templateUrl||(r.templateUrl=m.templateUrl),angular.isArray(r.promise)||(r.promise=[r.promise]),t||(t=e.$new()),t.$message=r.message,angular.equals(c.promises,r.promise)||c.reset({promises:r.promise,delay:r.delay,minDuration:r.minDuration}),t.$cgBusyIsActive=function(){return c.active()},n&&o===r.templateUrl&&l===r.backdrop||(n&&n.remove(),a&&a.remove(),o=r.templateUrl,l=r.backdrop,y.get(o,{cache:d}).then(function(e){if(r.backdrop=void 0===r.backdrop||r.backdrop,r.backdrop){a=p('<div class="cg-busy cg-busy-backdrop cg-busy-backdrop-animation ng-hide" ng-show="$cgBusyIsActive()"></div>')(t),i.append(a)}var s='<div class="'+r.wrapperClass+' ng-hide" ng-show="$cgBusyIsActive()">'+e.data+"</div>";n=p(s)(t),angular.element(n.children()[0]).css("position","absolute").css("top",0).css("left",0).css("right",0).css("bottom",0),i.append(n)},function(e){throw new Error("Template specified for cgBusy ("+r.templateUrl+") could not be loaded. "+e)}))},!0)}}}]);